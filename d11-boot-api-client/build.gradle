/**
 * D11 Boot API Client.
 */

plugins {
    id 'java-library'
    id "org.openapi.generator" version "4.3.1"
}

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

dependencies {
    // Needed to compile classes generated by openApiGenerate.
    compileOnly project(':d11-boot-api')
    compileOnly 'org.openapitools:jackson-databind-nullable:0.2.1'
    compileOnly('org.springframework.boot:spring-boot-starter-webflux:2.3.4.RELEASE')
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated/src/main/java"
        }
   }
}

openApiGenerate() {
    generatorName = "java"
    inputSpec = project(':d11-boot-api').inputSpecFile.toString()
    outputDir = "$buildDir/generated"
    invokerPackage = "org.d11.boot.client"
    apiPackage = "org.d11.boot.client.api"
    modelPackage = "org.d11.boot.api.model"
    modelNameSuffix = "DTO"
    configOptions = [
        dateLibrary: "java8",
        booleanGetterPrefix: "is",
        group: 'org.d11.boot.client',
        library: "webclient"
    ]
}

task openApiClean(type: Delete) {
    dependsOn tasks.openApiGenerate
    // We don't need the automagically generated ApiUtil
    delete fileTree('build\\generated\\src\\') {
        include '**/ApiUtil.java'
        include '**/AndroidManifest.xml'
    }
    delete ('build\\generated\\src\\test')
    delete ('build\\generated\\src\\main\\java\\org\\d11\\boot\\api')
}

compileJava {
    dependsOn openApiClean
}
