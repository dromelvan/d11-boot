plugins {
    id 'java-library'
    id "org.openapi.generator" version "${openapiGeneratorVersion}"
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    // Build complains about missing enum constants without this.
    compileOnly "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"

    implementation project(':d11-boot-api')

    api "io.github.openfeign:feign-core:${openFeignVersion}"
    api "io.github.openfeign:feign-jackson:${openFeignVersion}"
    api "io.github.openfeign:feign-okhttp:${openFeignVersion}"
    api "org.springframework.cloud:spring-cloud-starter-openfeign:${openFeignCloudVersion}"

    // Needed to compile classes generated by openApiGenerate.
    compileOnly "org.openapitools:jackson-databind-nullable:${jacksonDatabindNullableVersion}"
    compileOnly "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${jacksonDatatypeJsr310Version}"
    compileOnly "com.github.scribejava:scribejava-core:${scribeJavaVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

sourceSets {
    main {
        java {
            srcDir "${buildDir.absolutePath}/generated/src/main/java"
        }
    }
}

openApiGenerate() {
    generatorName = "java"
    inputSpec = project(':d11-boot-api').inputSpecFile.toString()
    outputDir = "$buildDir/generated"
    invokerPackage = group + ".api.v2.client"
    apiPackage = group + ".api.v2.client"
    modelPackage = group + ".api.v2.model"
    modelNameSuffix = "DTO"
    configOptions = [
            dateLibrary: "java8",
            useJakartaEe: "true",
            booleanGetterPrefix: "is",
            group: "org.d11.boot",
            library: "feign"
    ]
}

task openApiClean(type: Delete) {
    dependsOn tasks.openApiGenerate
    // We don't need the automagically generated ApiUtil
    delete fileTree('build\\generated\\src\\') {
        include '**/AndroidManifest.xml'
    }
    delete ('build\\generated\\src\\test')
    delete fileTree('build\\generated\\src\\main\\java\\org\\d11\\boot\\api\\v2\\model\\') {
        exclude '**/ApiResponse.java'
    }
}

compileJava {
    dependsOn openApiClean
}

test {
    useJUnitPlatform()
}

bootJar {
    enabled = false
}
