openapi: 3.0.3
info:
  version: 1.0.0
  title: D11 API
  description: API for the D11 Spring Boot application
  license:
    name: MIT
servers:
  - url: http://localhost:8080

paths:
  /users/{userId}:
    get:
      summary: Find a user by id.
      operationId: findUserById
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /countries/{countryId}:
    get:
      summary: Find a country by id.
      operationId: findCountryById
      tags:
        - country
      parameters:
        - name: countryId
          in: path
          required: true
          description: The id of the country to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /players/{playerId}:
    get:
      summary: Find a player by id.
      operationId: findPlayerById
      tags:
        - player
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

  /stadia/{stadiumId}:
    get:
      summary: Find a stadium by id.
      operationId: findStadiumById
      tags:
        - stadium
      parameters:
        - name: stadiumId
          in: path
          required: true
          description: The id of the stadium to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stadium"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /teams/{teamId}:
    get:
      summary: Find a team by id.
      operationId: findTeamById
      tags:
        - team
      parameters:
        - name: teamId
          in: path
          required: true
          description: The id of the team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-teams/{d11TeamId}:
    get:
      summary: Find a D11 team by id.
      operationId: findD11TeamById
      tags:
        - d11Team
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: The id of the D11 team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons:
    get:
      summary: Finds all seasons.
      operationId: findAllSeasons
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Season"
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/{seasonId}:
    get:
      summary: Find a season by id.
      operationId: findSeasonById
      tags:
        - season
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/current:
    get:
      summary: Find the current season.
      operationId: findCurrentSeason
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /premier-leagues/{premierLeagueId}:
    get:
      summary: Find a premier league by id.
      operationId: findPremierLeagueById
      tags:
        - premierLeague
      parameters:
        - name: premierLeagueId
          in: path
          required: true
          description: The id of the premier league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PremierLeague"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-leagues/{d11LeagueId}:
    get:
      summary: Find a D11 league by id.
      operationId: findD11LeagueById
      tags:
        - d11League
      parameters:
        - name: d11LeagueId
          in: path
          required: true
          description: The id of the D11 league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11League"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    Unexpected:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
  schemas:
    D11BootError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      type: object
      required:
        - id
        - name
        - administrator
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        administrator:
          type: boolean

    Status:
      type: string
      enum:
        - 'Pending'
        - 'Active'
        - 'Finished'
        - 'Full Time'

    Country:
      type: object
      required:
        - id
        - name
        - iso
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        iso:
          type: string

    PlayerBase:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
    Player:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
        - country
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
        country:
          $ref: '#/components/schemas/Country'

    Stadium:
      type: object
      required:
        - id
        - name
        - city
        - capacity
        - opened
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        city:
          type: string
        capacity:
          type: integer
          format: int32
        opened:
          type: integer
          format: int32
        photoFileName:
          type: string

    TeamBase:
      type: object
      required:
        - id
        - whoscoredId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
    Team:
      type: object
      required:
        - id
        - whoscoredId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
        - stadium
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        stadium:
          $ref: '#/components/schemas/Stadium'

    D11TeamBase:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
    D11Team:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
        - owner
        - coOwner
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        coOwner:
          $ref: '#/components/schemas/User'

    SeasonBase:
      type: object
      required:
        - id
        - name
        - shortName
        - status
        - date
        - legacy
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
    Season:
      type: object
      required:
        - id
        - name
        - shortName
        - status
        - date
        - legacy
        - premierLeague
        - d11League
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'

    PremierLeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PremierLeague:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

    D11LeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    D11League:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

