openapi: 3.0.3
info:
  version: 1.0.0
  title: D11 API
  description: API for the D11 Spring Boot application
  license:
    name: MIT
servers:
  - url: http://localhost:8080

paths:
  /authentication:
    post:
      summary: Authenticate a user.
      operationId: authenticate
      tags:
        - authentication
      requestBody:
        description: User authentication properties.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Authentication'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthenticationResult"
        '401':
          $ref: '#/components/responses/Unauthorized'

  /users/{userId}:
    get:
      summary: Find a user by id.
      operationId: findUserById
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /countries:
    get:
      summary: Finds all countries.
      operationId: findAllCountries
      tags:
        - country
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Country"
        '500':
          $ref: '#/components/responses/Unexpected'
  /countries/{countryId}:
    get:
      summary: Find a country by id.
      operationId: findCountryById
      tags:
        - country
      parameters:
        - name: countryId
          in: path
          required: true
          description: The id of the country to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /positions:
    get:
      summary: Finds all positions.
      operationId: findAllPositions
      tags:
        - position
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
        '500':
          $ref: '#/components/responses/Unexpected'
  /positions/{positionId}:
    get:
      summary: Find a position by id.
      operationId: findPositionById
      tags:
        - position
      parameters:
        - name: positionId
          in: path
          required: true
          description: The id of the position to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /players/{playerId}:
    get:
      summary: Find a player by id.
      operationId: findPlayerById
      tags:
        - player
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /players:
    post:
      summary: Insert a new player.
      security:
        - BearerAuth: []
      operationId: insertPlayer
      tags:
        - player
      requestBody:
        description: The player that will be inserted.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertPlayer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertPlayerResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
    put:
      summary: Update a player.
      security:
        - BearerAuth: []
      operationId: updatePlayer
      tags:
        - player
      requestBody:
        description: The player that will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePlayer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdatePlayerResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'

  /stadia/{stadiumId}:
    get:
      summary: Find a stadium by id.
      operationId: findStadiumById
      tags:
        - stadium
      parameters:
        - name: stadiumId
          in: path
          required: true
          description: The id of the stadium to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stadium"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /teams:
    get:
      summary: Finds all teams.
      operationId: findAllTeams
      tags:
        - team
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamName"
        '500':
          $ref: '#/components/responses/Unexpected'
  /teams/{teamId}:
    get:
      summary: Find a team by id.
      operationId: findTeamById
      tags:
        - team
      parameters:
        - name: teamId
          in: path
          required: true
          description: The id of the team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-teams:
    get:
      summary: Finds all D11 teams.
      operationId: findAllD11Teams
      tags:
        - d11Team
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/D11TeamName"
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-teams/{d11TeamId}:
    get:
      summary: Find a D11 team by id.
      operationId: findD11TeamById
      tags:
        - d11Team
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: The id of the D11 team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-teams/season/{seasonId}:
    get:
      summary: Find D11 teams by season id.
      operationId: findD11TeamBySeasonId
      tags:
        - d11Team
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season for which D11 teams will be found.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/D11Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons:
    get:
      summary: Finds ids for all seasons.
      operationId: findAllSeasons
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/{seasonId}:
    get:
      summary: Find a season by id.
      operationId: findSeasonById
      tags:
        - season
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/{seasonId}/summary:
    get:
      summary: Find a season summary by id.
      operationId: findSeasonSummaryById
      tags:
        - season
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season summary to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SeasonSummary"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/current:
    get:
      summary: Find the current season.
      operationId: findCurrentSeason
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /premier-leagues/{premierLeagueId}:
    get:
      summary: Find a premier league by id.
      operationId: findPremierLeagueById
      tags:
        - premierLeague
      parameters:
        - name: premierLeagueId
          in: path
          required: true
          description: The id of the premier league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PremierLeague"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /match-weeks/{matchWeekId}:
    get:
      summary: Find a match week by id.
      operationId: findMatchWeekById
      tags:
        - matchWeek
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: The id of the match week to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchWeek"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /match-weeks/current:
    get:
      summary: Find the current match week.
      operationId: findCurrentMatchWeek
      tags:
        - matchWeek
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchWeek"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /match-weeks/season/{seasonId}:
    get:
      summary: Find match weeks by season id.
      operationId: findMatchWeekBySeasonId
      tags:
        - matchWeek
      parameters:
        - name: seasonId
          in: path
          required: true
          description: Id for the season that match weeks will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/MatchWeek"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /matches/{matchId}:
    get:
      summary: Find a match by id.
      operationId: findMatchById
      tags:
        - match
      parameters:
        - name: matchId
          in: path
          required: true
          description: The id of the match to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /matches/team/{teamId}/season/{seasonId}:
    get:
      summary: Find match ids for a team and a season.
      operationId: findMatchByTeamIdAndSeasonId
      tags:
        - match
      parameters:
        - name: teamId
          in: path
          required: true
          description: The id of the team that match ids will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: The id of the season that match ids will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'

  /matches/current:
    get:
      summary: Find the current matches.
      operationId: findCurrentMatches
      tags:
        - match
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchesByDate"
        '500':
          $ref: '#/components/responses/Unexpected'

  /d11-leagues/{d11LeagueId}:
    get:
      summary: Find a D11 league by id.
      operationId: findD11LeagueById
      tags:
        - d11League
      parameters:
        - name: d11LeagueId
          in: path
          required: true
          description: The id of the D11 league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11League"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-matches/{d11MatchId}:
    get:
      summary: Find a D11 match by id.
      operationId: findD11MatchById
      tags:
        - d11Match
      parameters:
        - name: d11MatchId
          in: path
          required: true
          description: The id of the D11 match to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11Match"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-matches/d11-team/{d11TeamId}/season/{seasonId}:
    get:
      summary: Find D11 match ids for a D11team and a season.
      operationId: findD11MatchByD11TeamIdAndSeasonId
      tags:
        - d11Match
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: The id of the D11 team that D11 match ids will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: The id of the season that D11 match ids will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: integer
                  format: int64
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-matches/current:
    get:
      summary: Find the current D11 matches.
      operationId: findCurrentD11Matches
      tags:
        - d11Match
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11MatchesByDate"
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/{playerMatchStatId}:
    get:
      summary: Find a player match stat by id.
      operationId: findPlayerMatchStatById
      tags:
        - playerMatchStat
      parameters:
        - name: playerMatchStatId
          in: path
          required: true
          description: The id of the player match stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match/{matchId}:
    get:
      summary: Find player match stats for a match.
      operationId: findPlayerMatchStatByMatchId
      tags:
        - playerMatchStat
      parameters:
        - name: matchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match/{matchId}/team/{teamId}:
    get:
      summary: Find player match stats for a match and a team. Only active (starting lineup or substitutes) players will be returned.
      operationId: findActivePlayerMatchStatByMatchIdAndTeamId
      tags:
        - playerMatchStat
      parameters:
        - name: matchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          description: Id for the team that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/d11-match/{d11MatchId}:
    get:
      summary: Find player match stats for a D11 match.
      operationId: findPlayerMatchStatByD11MatchId
      tags:
        - playerMatchStat
      parameters:
        - name: d11MatchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/d11-match/{d11MatchId}/d11-team/{d11TeamId}:
    get:
      summary: Find player match stats for a D11 match and a D11 team.
      operationId: findPlayerMatchStatByD11MatchIdAndD11TeamId
      tags:
        - playerMatchStat
      parameters:
        - name: d11MatchId
          in: path
          required: true
          description: Id for the D11 match that player match stats will be found for.
          schema:
            type: integer
            format: int64
        - name: d11TeamId
          in: path
          required: true
          description: Id for the D11 team that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/player/{playerId}/season/{seasonId}:
    get:
      summary: Find player match stats for a player and season.
      operationId: findPlayerMatchStatByPlayerIdAndSeasonId
      tags:
        - playerMatchStat
      parameters:
        - name: playerId
          in: path
          required: true
          description: Id for the player that player match stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match-week/{matchWeekId}/top:
    get:
      summary: Find top player match stats for a match week.
      operationId: findTop5PlayerMatchStatByMatchWeek
      tags:
        - playerMatchStat
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: Id for the match week that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match-week/{matchWeekId}/bottom:
    get:
      summary: Find bottom player match stats for a match week.
      operationId: findBottom5PlayerMatchStatByMatchWeek
      tags:
        - playerMatchStat
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: Id for the match week that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/{playerSeasonStatId}:
    get:
      summary: Find a player season stat by id.
      operationId: findPlayerSeasonStatById
      tags:
        - playerSeasonStat
      parameters:
        - name: playerSeasonStatId
          in: path
          required: true
          description: The id of the player season stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/player/{playerId}:
    get:
      summary: Find player season stats by player id.
      operationId: findPlayerSeasonStatByPlayerId
      tags:
        - playerSeasonStat
      parameters:
        - name: playerId
          in: path
          required: true
          description: Id for the player that player season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/season/{seasonId}/page/{page}:
    get:
      summary: Find player season stats by season id and page (25 per page).
      operationId: findPlayerSeasonStatBySeasonId
      tags:
        - playerSeasonStat
      parameters:
        - name: seasonId
          in: path
          required: true
          description: Id for the season that player season stats will be found for.
          schema:
            type: integer
            format: int64
        - name: page
          in: path
          required: true
          description: The page (25 per page) of player season stats for the season that will be returned.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/season/{seasonId}/available:
    get:
      summary: Find player season stats for available players by season id.
      operationId: findAvailablePlayerSeasonStatBySeasonId
      tags:
        - playerSeasonStat
      parameters:
        - name: seasonId
          in: path
          required: true
          description: Id for the season that available player season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamPlayerSeasonStats"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/player/{playerId}/season/{seasonId}:
    get:
      summary: Find a player season stat by player id and season id.
      operationId: findPlayerSeasonStatByPlayerIdAndSeasonId
      tags:
        - playerSeasonStat
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player that a player season stat will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: The id of the season that a player season stat will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/team/{teamId}/season/{seasonId}:
    get:
      summary: Find player season stats by team id and season id.
      operationId: findPlayerSeasonStatByTeamIdAndSeasonId
      tags:
        - playerSeasonStat
      parameters:
        - name: teamId
          in: path
          required: true
          description: Id for the team that player season stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that player season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/d11-team/{d11TeamId}/season/{seasonId}:
    get:
      summary: Find player season stats by D11 team id and season id.
      operationId: findPlayerSeasonStatByD11TeamIdAndSeasonId
      tags:
        - playerSeasonStat
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: Id for the D11 team that player season stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that player season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-match-week-stats/{teamMatchWeekStatId}:
    get:
      summary: Find a team match week stat by id.
      operationId: findTeamMatchWeekStatById
      tags:
        - teamMatchWeekStat
      parameters:
        - name: teamMatchWeekStatId
          in: path
          required: true
          description: The id of the team match week stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamMatchWeekStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-match-week-stats/{d11TeamMatchWeekStatId}:
    get:
      summary: Find a D11 team match week stat by id.
      operationId: findD11TeamMatchWeekStatById
      tags:
        - d11TeamMatchWeekStat
      parameters:
        - name: d11TeamMatchWeekStatId
          in: path
          required: true
          description: The id of the D11 team match week stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11TeamMatchWeekStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-season-stats/{teamSeasonStatId}:
    get:
      summary: Find a team season stat by id.
      operationId: findTeamSeasonStatById
      tags:
        - teamSeasonStat
      parameters:
        - name: teamSeasonStatId
          in: path
          required: true
          description: The id of the team season stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-season-stats/season/{seasonId}:
    get:
      summary: Find team season stats by season id.
      operationId: findTeamSeasonStatBySeasonId
      tags:
        - teamSeasonStat
      parameters:
        - name: seasonId
          in: path
          required: true
          description: Id for the season that team season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-season-stats/team/{teamId}/season/{seasonId}:
    get:
      summary: Find team season stats by team id and season id.
      operationId: findTeamSeasonStatByTeamIdAndSeasonId
      tags:
        - teamSeasonStat
      parameters:
        - name: teamId
          in: path
          required: true
          description: Id for the team that team season stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that team season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-season-stats/{d11TeamSeasonStatId}:
    get:
      summary: Find a D11 team season stat by id.
      operationId: findD11TeamSeasonStatById
      tags:
        - d11TeamSeasonStat
      parameters:
        - name: d11TeamSeasonStatId
          in: path
          required: true
          description: The id of the D11 team season stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-season-stats/season/{seasonId}:
    get:
      summary: Find D11 team season stats by season id.
      operationId: findD11TeamSeasonStatBySeasonId
      tags:
        - d11TeamSeasonStat
      parameters:
        - name: seasonId
          in: path
          required: true
          description: Id for the season that D11 team season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/D11TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-season-stats/d11-team/{d11TeamId}/season/{seasonId}:
    get:
      summary: Find D11 team season stats by D11 team id and season id.
      operationId: findD11TeamSeasonStatByD11TeamIdAndSeasonId
      tags:
        - d11TeamSeasonStat
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: Id for the D11 team that D11 team season stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that D11 team season stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11TeamSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-windows/{transferWindowId}:
    get:
      summary: Find a transfer window by id.
      operationId: findTransferWindowById
      tags:
        - transferWindow
      parameters:
        - name: transferWindowId
          in: path
          required: true
          description: The id of the transfer window to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferWindow"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-windows/current:
    get:
      summary: Find the current transfer window.
      operationId: findCurrentTransferWindow
      tags:
        - transferWindow
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferWindow"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-windows/season/{seasonId}:
    get:
      summary: Find a transfer window by season id.
      operationId: findTransferWindowBySeasonId
      tags:
        - transferWindow
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season that transfer windows will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransferWindow"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-days/{transferDayId}:
    get:
      summary: Find a transfer day by id.
      operationId: findTransferDayById
      tags:
        - transferDay
      parameters:
        - name: transferDayId
          in: path
          required: true
          description: The id of the transfer day to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferDay"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-days/current:
    get:
      summary: Find the current transfer day.
      operationId: findCurrentTransferDay
      tags:
        - transferDay
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferDay"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-days/transfer-window/{transferWindowId}:
    get:
      summary: Find transfer days by transfer window id.
      operationId: findTransferDayByTransferWindowId
      tags:
        - transferDay
      parameters:
        - name: transferWindowId
          in: path
          required: true
          description: The id of the transfer window that transfer days will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransferDay"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-days:
    put:
      summary: Update a transfer day.
      security:
        - BearerAuth: []
      operationId: updateTransferDay
      tags:
        - transferDay
      requestBody:
        description: The transfer day that will be updated.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTransferDay'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UpdateTransferDayResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-listings/{transferListingId}:
    get:
      summary: Find a transfer listing by id.
      operationId: findTransferListingById
      tags:
        - transferListing
      parameters:
        - name: transferListingId
          in: path
          required: true
          description: The id of the transfer listing to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferListing"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-listings/transfer-day/{transferDayId}/page/{page}:
    get:
      summary: Find transfer listings by transfer day id.
      operationId: findTransferListingByTransferDayId
      tags:
        - transferListing
      parameters:
        - name: transferDayId
          in: path
          required: true
          description: The id of the transfer day that transfer listings will be found for.
          schema:
            type: integer
            format: int64
        - name: page
          in: path
          required: true
          description: The page (25 per page) of transfer listings for the transfer day that will be returned.
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransferListing"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-listings:
    post:
      summary: Insert a new transfer listing.
      security:
        - BearerAuth: []
      operationId: insertTransferListing
      tags:
        - transferListing
      requestBody:
        description: The transfer listing that will be inserted.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertTransferListing'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertTransferListingResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-bids/{transferBidId}:
    get:
      summary: Find a transfer bid by id.
      operationId: findTransferBidById
      tags:
        - transferBid
      parameters:
        - name: transferBidId
          in: path
          required: true
          description: The id of the transfer bid to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TransferBid"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfer-bids/transfer-day/{transferDayId}:
    get:
      summary: Find transfer bids by transfer day id.
      operationId: findTransferBidByTransferDayId
      tags:
        - transferBid
      parameters:
        - name: transferDayId
          in: path
          required: true
          description: The id of the transfer day that transfer bids will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TransferBid"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfers/{transferId}:
    get:
      summary: Find a transfer by id.
      operationId: findTransferById
      tags:
        - transfer
      parameters:
        - name: transferId
          in: path
          required: true
          description: The id of the transfer to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Transfer"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfers/transfer-day/{transferDayId}:
    get:
      summary: Find transfers by transfer day id.
      operationId: findTransferByTransferDayId
      tags:
        - transfer
      parameters:
        - name: transferDayId
          in: path
          required: true
          description: The id of the transfer day that transfers will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transfer"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfers/player/{playerId}:
    get:
      summary: Find transfers by player id.
      operationId: findTransferByPlayerId
      tags:
        - transfer
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player that transfers will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Transfer"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /transfers:
    post:
      summary: Insert a new transfer.
      security:
        - BearerAuth: []
      operationId: insertTransfer
      tags:
        - transfer
      requestBody:
        description: The transfer that will be inserted.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertTransfer'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/InsertTransferResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '500':
          $ref: '#/components/responses/Unexpected'

  /search:
    get:
      summary: Search players, teams and D11 teams by name.
      operationId: search
      tags:
        - search
      parameters:
        - in: query
          required: true
          name: name
          schema:
            type: string
          description: The name to search on. If enclosed in quotes, only exact matches will be returned.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/Unexpected'

  /administration/updateSquads:
    post:
      summary: Updates Premier League team squads.
      operationId: updateSquads
      tags:
        - administration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministrationRequestResult"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /administration/updatePhotos:
    post:
      summary: Updates Premier League player photos.
      operationId: updatePhotos
      tags:
        - administration
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministrationRequestResult"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
  /administration/uploadMatchStats:
    post:
      summary: Upload Premier League match stats.
      operationId: uploadMatchStats
      tags:
        - administration
      requestBody:
        description: Match stats.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UploadMatchStats'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AdministrationRequestResult"
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    Unexpected:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
  schemas:
    D11BootError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Authentication:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
        password:
          type: string

    AuthenticationResult:
      type: object
      required:
        - jwt
        - d11Team
        - authorities
      properties:
        jwt:
          type: string
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
        authorities:
          type: array
          items:
            type: string

    User:
      type: object
      required:
        - id
        - name
        - administrator
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        administrator:
          type: boolean

    Status:
      type: string
      enum:
        - 'Pending'
        - 'Active'
        - 'Full Time'
        - 'Finished'
        - 'Postponed'

    Country:
      type: object
      required:
        - id
        - name
        - iso
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        iso:
          type: string

    Position:
      type: object
      required:
        - id
        - name
        - code
        - maxCount
        - defender
        - sortOrder
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        maxCount:
          type: integer
          format: int32
        defender:
          type: boolean
        sortOrder:
          type: integer
          format: int32

    InsertPlayer:
      type: object
      required:
        - lastName
        - teamId
        - countryId
        - positionId
        - whoscoredId
      properties:
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        teamId:
          type: integer
          format: int64
        countryId:
          type: integer
          format: int64
        positionId:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
    InsertPlayerResult:
      type: object
      properties:
        playerId:
          type: integer
          format: int64
        playerSeasonStatId:
          type: integer
          format: int64
        errors:
          type: array
          items:
            type: string

    UpdatePlayer:
      type: object
      required:
        - id
        - lastName
        - teamId
        - d11TeamId
        - countryId
        - positionId
        - whoscoredId
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        teamId:
          type: integer
          format: int64
        d11TeamId:
          type: integer
          format: int64
        countryId:
          type: integer
          format: int64
        positionId:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
    UpdatePlayerResult:
      type: object
      properties:
        playerId:
          type: integer
          format: int64
        playerSeasonStatId:
          type: integer
          format: int64
        errors:
          type: array
          items:
            type: string

    InsertTransfer:
      type: object
      required:
        - playerId
        - d11TeamId
        - fee
      properties:
        playerId:
          type: integer
          format: int64
        d11TeamId:
          type: integer
          format: int64
        fee:
          type: integer
          format: int32
    InsertTransferResult:
      type: object
      properties:
        playerId:
          type: integer
          format: int64
        transferId:
          type: integer
          format: int64
        errors:
          type: array
          items:
            type: string

    InsertTransferListing:
      type: object
      required:
        - playerId
      properties:
        playerId:
          type: integer
          format: int64
    InsertTransferListingResult:
      type: object
      required:
        - transferListingId
        - playerId
        - remainingTransfers
      properties:
        transferListingId:
          type: integer
          format: int64
        playerId:
          type: integer
          format: int64
        remainingTransfers:
          type: integer
          format: int32

    UpdateTransferDay:
      type: object
      required:
        - id
        - status
      properties:
        id:
          type: integer
          format: int64
        status:
          $ref: '#/components/schemas/Status'
    UpdateTransferDayResult:
      type: object
      properties:
        transferDayId:
          type: integer
          format: int64
        errors:
          type: array
          items:
            type: string

    PlayerName:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - name
        - shortName
        - parameterizedName
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        photoFileName:
          type: string
    PlayerBase:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
        - verified
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
        verified:
          type: boolean
    Player:
      type: object
      required:
        - id
        - whoscoredId
        - premierLeagueId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
        - verified
        - country
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        premierLeagueId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
        verified:
          type: boolean
        country:
          $ref: '#/components/schemas/Country'

    Stadium:
      type: object
      required:
        - id
        - name
        - city
        - capacity
        - opened
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        city:
          type: string
        capacity:
          type: integer
          format: int32
        opened:
          type: integer
          format: int32
        photoFileName:
          type: string

    TeamName:
      type: object
      required:
        - id
        - whoscoredId
        - premierLeagueId
        - name
        - shortName
        - code
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        premierLeagueId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        photoFileName:
          type: string
    TeamBase:
      type: object
      required:
        - id
        - whoscoredId
        - premierLeagueId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
        - url
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        premierLeagueId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        url:
          type: string
    Team:
      type: object
      required:
        - id
        - whoscoredId
        - premierLeagueId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
        - url
        - stadium
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        premierLeagueId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        url:
          type: string
        stadium:
          $ref: '#/components/schemas/Stadium'

    D11TeamName:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        photoFileName:
          type: string
    D11TeamBase:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
    D11Team:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
        - owner
        - coOwner
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        coOwner:
          $ref: '#/components/schemas/User'

    SeasonBase:
      type: object
      required:
        - id
        - name
        - d11TeamBudget
        - shortName
        - status
        - date
        - legacy
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        d11TeamBudget:
          type: integer
          format: int32
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
    Season:
      type: object
      required:
        - id
        - name
        - d11TeamBudget
        - maxTransfers
        - shortName
        - status
        - date
        - legacy
        - playerSeasonStatCount
        - premierLeague
        - d11League
        - matchWeeks
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        d11TeamBudget:
          type: integer
          format: int32
        maxTransfers:
          type: integer
          format: int32
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
        playerSeasonStatCount:
          type: integer
          format: int32
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'
        matchWeeks:
          type: array
          items:
            type: integer
            format: int64
    SeasonSummary:
      type: object
      required:
        - id
        - name
        - d11TeamBudget
        - shortName
        - status
        - date
        - legacy
        - premierLeague
        - d11League
        - top3PlayerSeasonStats
        - top3TeamSeasonStats
        - top3D11TeamSeasonStats
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        d11TeamBudget:
          type: integer
          format: int32
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'
        top3PlayerSeasonStats:
          type: array
          items:
            $ref: "#/components/schemas/PlayerSeasonStatStub"
        top3TeamSeasonStats:
          type: array
          items:
            $ref: "#/components/schemas/TeamSeasonStatStub"
        top3D11TeamSeasonStats:
          type: array
          items:
            $ref: "#/components/schemas/D11TeamSeasonStatStub"

    PremierLeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PremierLeague:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

    MatchWeekName:
      type: object
      required:
        - id
        - matchWeekNumber
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
    MatchWeekBase:
      type: object
      required:
        - id
        - matchWeekNumber
        - status
        - date
        - season
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        season:
          $ref: '#/components/schemas/SeasonBase'
        date:
          type: string
          format: date
    MatchWeek:
      type: object
      required:
        - id
        - matchWeekNumber
        - status
        - elapsed
        - date
        - season
        - premierLeagueLeader
        - d11LeagueLeader
        - mostValuablePlayer
        - matches
        - d11Matches
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        elapsed:
          type: integer
          format: int32
        date:
          type: string
          format: date
        season:
          $ref: '#/components/schemas/SeasonBase'
        premierLeagueLeader:
          $ref: '#/components/schemas/TeamMatchWeekStatStub'
        d11LeagueLeader:
          $ref: '#/components/schemas/D11TeamMatchWeekStatStub'
        mostValuablePlayer:
          $ref: '#/components/schemas/PlayerMatchStatStub'
        matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64
        d11Matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64

    MatchBase:
      type: object
      required:
        - id
        - whoscoredId
        - datetime
        - home_team_goals
        - away_team_goals
        - previous_home_team_goals
        - previous_away_team_goals
        - elapsed
        - status
        - homeTeam
        - awayTeam
        - matchWeek
        - matchLogMessages
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        # Matches are a special case where we want to include match week and team name, code and id in the base DTO.
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'
        homeTeam:
          $ref: '#/components/schemas/TeamName'
        awayTeam:
          $ref: '#/components/schemas/TeamName'
        matchLogMessages:
          type: array
          items:
            $ref: "#/components/schemas/MatchLogMessage"

    Match:
      type: object
      required:
        - id
        - whoscoredId
        - datetime
        - home_team_goals
        - away_team_goals
        - previous_home_team_goals
        - previous_away_team_goals
        - elapsed
        - status
        - homeTeam
        - awayTeam
        - matchWeek
        - stadium
        - goals
        - matchLogMessages
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        homeTeam:
          $ref: '#/components/schemas/TeamBase'
        awayTeam:
          $ref: '#/components/schemas/TeamBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'
        stadium:
          $ref: '#/components/schemas/Stadium'
        goals:
          type: array
          items:
            $ref: "#/components/schemas/GoalBase"
        matchLogMessages:
          type: array
          items:
            $ref: "#/components/schemas/MatchLogMessage"

    MatchLogMessage:
      type: object
      required:
        - id
        - type
        - message
      properties:
        id:
          type: integer
          format: int64
        type:
          $ref: '#/components/schemas/MatchLogMessageType'
        message:
          type: string

    MatchLogMessageType:
      type: string
      enum:
        - 'Info'
        - 'Error'

    UpdateMatch:
      type: object
      required:
        - whoscoredId
        - datetime
        - elapsed
        - status
        - homeTeam
        - awayTeam
        - goals
        - playerMatchStats
      properties:
        whoscoredId:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        homeTeam:
          $ref: '#/components/schemas/TeamBase'
        awayTeam:
          $ref: '#/components/schemas/TeamBase'
        goals:
          type: array
          items:
            $ref: "#/components/schemas/GoalBase"
        playerMatchStats:
          type: array
          items:
            $ref: "#/components/schemas/PlayerMatchStat"

    MatchesByDate:
      type: object
      required:
        - matches
      properties:
        matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64

    D11LeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    D11League:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

    D11MatchBase:
      type: object
      required:
        - id
        - datetime
        - home_team_goals
        - away_team_goals
        - home_team_points
        - away_team_points
        - previous_home_team_goals
        - previous_away_team_goals
        - previous_home_team_points
        - previous_away_team_points
        - elapsed
        - status
      properties:
        id:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        homeTeamPoints:
          type: integer
          format: int32
        awayTeamPoints:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamPoints:
          type: integer
          format: int32
        previousAwayTeamPoints:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    D11Match:
      type: object
      required:
        - id
        - datetime
        - home_team_goals
        - away_team_goals
        - home_team_points
        - away_team_points
        - previous_home_team_goals
        - previous_away_team_goals
        - previous_home_team_points
        - previous_away_team_points
        - elapsed
        - status
        - homeD11Team
        - awayD11Team
        - matchWeek
      properties:
        id:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        homeTeamPoints:
          type: integer
          format: int32
        awayTeamPoints:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamPoints:
          type: integer
          format: int32
        previousAwayTeamPoints:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        homeD11Team:
          $ref: '#/components/schemas/D11TeamBase'
        awayD11Team:
          $ref: '#/components/schemas/D11TeamBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'

    D11MatchesByDate:
      type: object
      required:
        - d11Matches
      properties:
        d11Matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64

    GoalBase:
      type: object
      required:
        - id
        - time
        - addedTime
        - penalty
        - ownGoal
        - player
        - team
      properties:
        id:
          type: integer
          format: int64
        time:
          type: integer
          format: int32
        addedTime:
          type: integer
          format: int32
        penalty:
          type: boolean
        ownGoal:
          type: boolean
        # Match events are a special case where we want to include player and team info in the base DTO.
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
    Goal:
      type: object
      required:
        - id
        - time
        - addedTime
        - penalty
        - ownGoal
        - match
        - team
        - player
      properties:
        id:
          type: integer
          format: int64
        time:
          type: integer
          format: int32
        addedTime:
          type: integer
          format: int32
        penalty:
          type: boolean
        ownGoal:
          type: boolean
        match:
          $ref: '#/components/schemas/MatchBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        player:
          $ref: '#/components/schemas/PlayerBase'

    PlayerMatchStatStub:
      type: object
      required:
        - id
        - rating
        - points
        - player
        - team
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        rating:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
    PlayerMatchStatBase:
      type: object
      required:
        - id
        - playedPosition
        - lineup
        - substitutionOnTime
        - substitutionOffTime
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - yellowCardTime
        - redCardTime
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - points
        - player
        - team
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        playedPosition:
          type: string
        lineup:
          type: integer
          format: int32
        substitutionOnTime:
          type: integer
          format: int32
        substitutionOffTime:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        yellowCardTime:
          type: integer
          format: int32
        redCardTime:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
    PlayerMatchStat:
      type: object
      required:
        - id
        - playedPosition
        - lineup
        - substitutionOnTime
        - substitutionOffTime
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - yellowCardTime
        - redCardTime
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - points
        - player
        - match
        - team
        - d11Team
        - position
      properties:
        id:
          type: integer
          format: int64
        playedPosition:
          type: string
        lineup:
          type: integer
          format: int32
        substitutionOnTime:
          type: integer
          format: int32
        substitutionOffTime:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        yellowCardTime:
          type: integer
          format: int32
        redCardTime:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerBase'
        match:
          $ref: '#/components/schemas/MatchBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        position:
          $ref: '#/components/schemas/Position'

    PlayerSeasonStatStub:
      type: object
      required:
        - id
        - shirtNumber
        - winCount
        - ranking
        - points
        - goals
        - player
        - team
        - d11Team
        - position
      properties:
        id:
          type: integer
          format: int64
        shirtNumber:
          type: integer
          format: int32
        winCount:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
        position:
          $ref: '#/components/schemas/Position'
    PlayerSeasonStatBase:
      type: object
      required:
        - id
        - shirtNumber
        - winCount
        - value
        - ranking
        - points
        - formPoints
        - formMatchPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
      properties:
        id:
          type: integer
          format: int64
        shirtNumber:
          type: integer
          format: int32
        winCount:
          type: integer
          format: int32
        value:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
    PlayerSeasonStat:
      type: object
      required:
        - id
        - shirtNumber
        - winCount
        - value
        - ranking
        - points
        - formPoints
        - formMatchPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
        - playerId
        - seasonId
        - teamId
        - d11TeamId
        - positionId
      properties:
        id:
          type: integer
          format: int64
        shirtNumber:
          type: integer
          format: int32
        winCount:
          type: integer
          format: int32
        value:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerBase'
        season:
          $ref: '#/components/schemas/SeasonBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        position:
          $ref: '#/components/schemas/Position'

    TeamPlayerSeasonStat:
      type: object
      required:
        - playerName
        - playerShortName
        - positionCode
      properties:
        playerName:
          type: string
        playerShortName:
          type: string
        positionCode:
          type: string
    TeamPlayerSeasonStats:
      type: object
      required:
        - team
        - players
      properties:
        team:
          $ref: '#/components/schemas/TeamName'
        players:
          type: array
          items:
            $ref: '#/components/schemas/TeamPlayerSeasonStat'

    TeamMatchWeekStatStub:
      type: object
      required:
        - id
        - points
        - goalDifference
        - ranking
        - team
      properties:
        id:
          type: integer
          format: int64
        points:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/TeamName'
    TeamMatchWeekStatBase:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    TeamMatchWeekStat:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - team
        - premierLeague
        - matchWeek
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/TeamBase'
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'

    D11TeamMatchWeekStatStub:
      type: object
      required:
        - id
        - points
        - goalsFor
        - ranking
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        points:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
    D11TeamMatchWeekStatBase:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    D11TeamMatchWeekStat:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - d11Team
        - d11League
        - matchWeek
      properties:
        id:
          type: integer
          format: int64
        main:
          type: boolean
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'

    TeamSeasonStatStub:
      type: object
      required:
        - id
        - winCount
        - points
        - goalDifference
        - ranking
        - team
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/TeamName'
    TeamSeasonStatBase:
      type: object
      required:
        - id
        - winCount
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    TeamSeasonStat:
      type: object
      required:
        - id
        - winCount
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - team
        - season
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/TeamName'
        season:
          $ref: '#/components/schemas/SeasonBase'

    D11TeamSeasonStatStub:
      type: object
      required:
        - id
        - winCount
        - points
        - goalsFor
        - ranking
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
    D11TeamSeasonStatBase:
      type: object
      required:
        - id
        - winCount
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    D11TeamSeasonStat:
      type: object
      required:
        - id
        - winCount
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - d11Team
        - season
      properties:
        id:
          type: integer
          format: int64
        winCount:
          type: integer
          format: int32
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
        season:
          $ref: '#/components/schemas/SeasonBase'

    PlayerSearchResult:
      type: object
      required:
        - id
        - name
        - photoFileName
        - teamId
        - teamName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        photoFileName:
          type: string
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
    SearchResult:
      type: object
      required:
        - players
      properties:
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerSearchResult"

    TransferWindowBase:
      type: object
      required:
        - id
        - transferWindowNumber
        - draft
        - status
        - datetime
      properties:
        id:
          type: integer
          format: int64
        transferWindowNumber:
          type: integer
          format: int32
        draft:
          type: boolean
        status:
          $ref: '#/components/schemas/Status'
        datetime:
          type: string
          format: date-time
    TransferWindow:
      type: object
      required:
        - id
        - transferWindowNumber
        - draft
        - status
        - datetime
        - matchWeek
      properties:
        id:
          type: integer
          format: int64
        transferWindowNumber:
          type: integer
          format: int32
        draft:
          type: boolean
        status:
          $ref: '#/components/schemas/Status'
        datetime:
          type: string
          format: date-time
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'

    TransferDayBase:
      type: object
      required:
        - id
        - transferDayNumber
        - status
        - datetime
      properties:
        id:
          type: integer
          format: int64
        transferDayNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        datetime:
          type: string
          format: date-time
    TransferDay:
      type: object
      required:
        - id
        - transferDayNumber
        - status
        - datetime
        - transferListingCount
        - transferWindow
      properties:
        id:
          type: integer
          format: int64
        transferDayNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        datetime:
          type: string
          format: date-time
        transferListingCount:
          type: integer
          format: int32
        transferWindow:
          $ref: '#/components/schemas/TransferWindow'

    TransferListingStub:
      type: object
      required:
        - id
        - ranking
        - points
        - goals
        - newPlayer
        - player
        - team
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        newPlayer:
          type: boolean
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
        d11Team:
          $ref: '#/components/schemas/D11TeamName'
    TransferListingBase:
      type: object
      required:
        - id
        - ranking
        - points
        - formPoints
        - formMatchPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
        - newPlayer
      properties:
        id:
          type: integer
          format: int64
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
        newPlayer:
          type: boolean
    TransferListing:
      type: object
      required:
        - id
        - ranking
        - points
        - formPoints
        - formMatchPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
        - transferDay
        - player
        - team
        - d11Team
        - position
        - newPlayer
      properties:
        id:
          type: integer
          format: int64
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
        newPlayer:
          type: boolean
        transferDay:
          $ref: '#/components/schemas/TransferDayBase'
        player:
          $ref: '#/components/schemas/PlayerBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        position:
          $ref: '#/components/schemas/Position'

    TransferBidBase:
      type: object
      required:
        - id
        - playerRanking
        - d11TeamRanking
        - fee
        - activeFee
        - successful
      properties:
        id:
          type: integer
          format: int64
        playerRanking:
          type: integer
          format: int32
        d11TeamRanking:
          type: integer
          format: int32
        fee:
          type: integer
          format: int32
        activeFee:
          type: integer
          format: int32
        successful:
          type: boolean
    TransferBid:
      type: object
      required:
        - id
        - playerRanking
        - d11TeamRanking
        - fee
        - activeFee
        - successful
        - transferDay
        - player
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        playerRanking:
          type: integer
          format: int32
        d11TeamRanking:
          type: integer
          format: int32
        fee:
          type: integer
          format: int32
        activeFee:
          type: integer
          format: int32
        successful:
          type: boolean
        transferDay:
          $ref: '#/components/schemas/TransferDayBase'
        player:
          $ref: '#/components/schemas/PlayerBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'

    TransferBase:
      type: object
      required:
        - id
        - fee
      properties:
        id:
          type: integer
          format: int64
        fee:
          type: integer
          format: int32
    Transfer:
      type: object
      required:
        - id
        - fee
        - transferDay
        - player
        - d11Team
      properties:
        id:
          type: integer
          format: int64
        fee:
          type: integer
          format: int32
        transferDay:
          $ref: '#/components/schemas/TransferDayBase'
        player:
          $ref: '#/components/schemas/PlayerBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'

    AdministrationRequestResult:
      type: object
      required:
        - message
      properties:
        message:
          type: string

    UploadMatchStats:
      type: object
      required:
        - data
      properties:
        data:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

