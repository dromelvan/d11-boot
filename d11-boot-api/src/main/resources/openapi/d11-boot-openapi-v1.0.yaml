openapi: 3.0.3
info:
  version: 1.0.0
  title: D11 API
  description: API for the D11 Spring Boot application
  license:
    name: MIT
servers:
  - url: http://localhost:8080

paths:
  /users/{userId}:
    get:
      summary: Find a user by id.
      operationId: findUserById
      tags:
        - user
      parameters:
        - name: userId
          in: path
          required: true
          description: The id of the user to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /countries/{countryId}:
    get:
      summary: Find a country by id.
      operationId: findCountryById
      tags:
        - country
      parameters:
        - name: countryId
          in: path
          required: true
          description: The id of the country to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Country"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /positions:
    get:
      summary: Finds all positions.
      operationId: findAllPositions
      tags:
        - position
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Position"
        '500':
          $ref: '#/components/responses/Unexpected'
  /positions/{positionId}:
    get:
      summary: Find a position by id.
      operationId: findPositionById
      tags:
        - position
      parameters:
        - name: positionId
          in: path
          required: true
          description: The id of the position to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Position"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /players/{playerId}:
    get:
      summary: Find a player by id.
      operationId: findPlayerById
      tags:
        - player
      parameters:
        - name: playerId
          in: path
          required: true
          description: The id of the player to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Player"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /stadia/{stadiumId}:
    get:
      summary: Find a stadium by id.
      operationId: findStadiumById
      tags:
        - stadium
      parameters:
        - name: stadiumId
          in: path
          required: true
          description: The id of the stadium to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Stadium"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /teams/{teamId}:
    get:
      summary: Find a team by id.
      operationId: findTeamById
      tags:
        - team
      parameters:
        - name: teamId
          in: path
          required: true
          description: The id of the team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-teams/{d11TeamId}:
    get:
      summary: Find a D11 team by id.
      operationId: findD11TeamById
      tags:
        - d11Team
      parameters:
        - name: d11TeamId
          in: path
          required: true
          description: The id of the D11 team to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11Team"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons:
    get:
      summary: Finds all seasons.
      operationId: findAllSeasons
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Season"
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/{seasonId}:
    get:
      summary: Find a season by id.
      operationId: findSeasonById
      tags:
        - season
      parameters:
        - name: seasonId
          in: path
          required: true
          description: The id of the season to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '400':
          $ref: '#/components/responses/BadRequest'
        #'401':
        #  $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /seasons/current:
    get:
      summary: Find the current season.
      operationId: findCurrentSeason
      tags:
        - season
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Season"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /premier-leagues/{premierLeagueId}:
    get:
      summary: Find a premier league by id.
      operationId: findPremierLeagueById
      tags:
        - premierLeague
      parameters:
        - name: premierLeagueId
          in: path
          required: true
          description: The id of the premier league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PremierLeague"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /match-weeks/{matchWeekId}:
    get:
      summary: Find a match week by id.
      operationId: findMatchWeekById
      tags:
        - matchWeek
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: The id of the match week to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchWeek"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /match-weeks/current:
    get:
      summary: Find the current match week.
      operationId: findCurrentMatchWeek
      tags:
        - matchWeek
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchWeek"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /matches/{matchId}:
    get:
      summary: Find a match by id.
      operationId: findMatchById
      tags:
        - match
      parameters:
        - name: matchId
          in: path
          required: true
          description: The id of the match to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Match"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-leagues/{d11LeagueId}:
    get:
      summary: Find a D11 league by id.
      operationId: findD11LeagueById
      tags:
        - d11League
      parameters:
        - name: d11LeagueId
          in: path
          required: true
          description: The id of the D11 league to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11League"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-match-weeks/{d11MatchWeekId}:
    get:
      summary: Find a D11 match week by id.
      operationId: findD11MatchWeekById
      tags:
        - d11MatchWeek
      parameters:
        - name: d11MatchWeekId
          in: path
          required: true
          description: The id of the D11 match week to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11MatchWeek"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-match-weeks/current:
    get:
      summary: Find the current D11 match week.
      operationId: findCurrentD11MatchWeek
      tags:
        - d11MatchWeek
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11MatchWeek"
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-matches/{d11MatchId}:
    get:
      summary: Find a D11 match by id.
      operationId: findD11MatchById
      tags:
        - d11Match
      parameters:
        - name: d11MatchId
          in: path
          required: true
          description: The id of the D11 match to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11Match"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/{playerMatchStatId}:
    get:
      summary: Find a player match stat by id.
      operationId: findPlayerMatchStatById
      tags:
        - playerMatchStat
      parameters:
        - name: playerMatchStatId
          in: path
          required: true
          description: The id of the player match stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match/{matchId}:
    get:
      summary: Find player match stats for a match.
      operationId: findPlayerMatchStatByMatchId
      tags:
        - playerMatchStat
      parameters:
        - name: matchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match/{matchId}/team/{teamId}:
    get:
      summary: Find player match stats for a match and a team. Only active (starting lineup or substitutes) players will be returned.
      operationId: findActivePlayerMatchStatByMatchIdAndTeamId
      tags:
        - playerMatchStat
      parameters:
        - name: matchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
        - name: teamId
          in: path
          required: true
          description: Id for the team that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/d11-match/{d11MatchId}:
    get:
      summary: Find player match stats for a D11 match.
      operationId: findPlayerMatchStatByD11MatchId
      tags:
        - playerMatchStat
      parameters:
        - name: d11MatchId
          in: path
          required: true
          description: Id for the match that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/player/{playerId}/season/{seasonId}:
    get:
      summary: Find player match stats for a player and season.
      operationId: findPlayerMatchStatByPlayerIdAndSeasonId
      tags:
        - playerMatchStat
      parameters:
        - name: playerId
          in: path
          required: true
          description: Id for the player that player match stats will be found for.
          schema:
            type: integer
            format: int64
        - name: seasonId
          in: path
          required: true
          description: Id for the season that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match-week/{matchWeekId}/top:
    get:
      summary: Find top player match stats for a match week.
      operationId: findTop5PlayerMatchStatByMatchWeek
      tags:
        - playerMatchStat
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: Id for the match week that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-match-stats/match-week/{matchWeekId}/bottom:
    get:
      summary: Find bottom player match stats for a match week.
      operationId: findBottom5PlayerMatchStatByMatchWeek
      tags:
        - playerMatchStat
      parameters:
        - name: matchWeekId
          in: path
          required: true
          description: Id for the match week that player match stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlayerMatchStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /player-season-stats/{playerSeasonStatId}:
    get:
      summary: Find a player season stat by id.
      operationId: findPlayerSeasonStatById
      tags:
        - playerSeasonStat
      parameters:
        - name: playerSeasonStatId
          in: path
          required: true
          description: The id of the player season stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/PlayerSeasonStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-table-stats/{teamTableStatId}:
    get:
      summary: Find a team table stat by id.
      operationId: findTeamTableStatById
      tags:
        - teamTableStat
      parameters:
        - name: teamTableStatId
          in: path
          required: true
          description: The id of the team table stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TeamTableStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /team-table-stats/premier-league/{premierLeagueId}:
    get:
      summary: Find team table stats by Premier League id.
      operationId: findTeamTableStatByPremierLeagueId
      tags:
        - teamTableStat
      parameters:
        - name: premierLeagueId
          in: path
          required: true
          description: Id for the Premier League that team table stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/TeamTableStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-table-stats/{d11TeamTableStatId}:
    get:
      summary: Find a D11 team table stat by id.
      operationId: findD11TeamTableStatById
      tags:
        - d11TeamTableStat
      parameters:
        - name: d11TeamTableStatId
          in: path
          required: true
          description: The id of the D11 team table stat to find.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/D11TeamTableStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /d11-team-table-stats/d11-league/{d11LeagueId}:
    get:
      summary: Find team table stats by D11 league id.
      operationId: findD11TeamTableStatByD11LeagueId
      tags:
        - d11TeamTableStat
      parameters:
        - name: d11LeagueId
          in: path
          required: true
          description: Id for the D11 league that D11 team table stats will be found for.
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/D11TeamTableStat"
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/Unexpected'
  /search:
    get:
      summary: Search players, teams and D11 teams by name.
      operationId: search
      tags:
        - search
      parameters:
        - in: query
          required: true
          name: name
          schema:
            type: string
          description: The name to search on. If enclosed in quotes, only exact matches will be returned.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SearchResult"
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/Unexpected'

components:
  responses:
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
    Unexpected:
      description: Unexpected Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/D11BootError'
  schemas:
    D11BootError:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    User:
      type: object
      required:
        - id
        - name
        - administrator
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        administrator:
          type: boolean

    Status:
      type: string
      enum:
        - 'Pending'
        - 'Active'
        - 'Finished'
        - 'Full Time'

    Country:
      type: object
      required:
        - id
        - name
        - iso
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        iso:
          type: string

    Position:
      type: object
      required:
        - id
        - name
        - code
        - defender
        - sortOrder
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        code:
          type: string
        defender:
          type: boolean
        sortOrder:
          type: integer
          format: int32

    PlayerName:
      type: object
      required:
        - id
        - firstName
        - lastName
        - name
        - shortName
      properties:
        id:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        name:
          type: string
        shortName:
          type: string
    PlayerBase:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
    Player:
      type: object
      required:
        - id
        - whoscoredId
        - firstName
        - lastName
        - fullName
        - name
        - shortName
        - parameterizedName
        - dateOfBirth
        - height
        - photoFileName
        - country
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        fullName:
          type: string
        name:
          type: string
        shortName:
          type: string
        parameterizedName:
          type: string
        dateOfBirth:
          type: string
          format: date
        height:
          type: integer
          format: int32
        photoFileName:
          type: string
        country:
          $ref: '#/components/schemas/Country'

    Stadium:
      type: object
      required:
        - id
        - name
        - city
        - capacity
        - opened
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        city:
          type: string
        capacity:
          type: integer
          format: int32
        opened:
          type: integer
          format: int32
        photoFileName:
          type: string

    TeamName:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        photoFileName:
          type: string
    TeamBase:
      type: object
      required:
        - id
        - whoscoredId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
    Team:
      type: object
      required:
        - id
        - whoscoredId
        - name
        - shortName
        - code
        - nickname
        - established
        - motto
        - colour
        - dummy
        - photoFileName
        - stadium
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        nickname:
          type: string
        established:
          type: integer
          format: int32
        motto:
          type: string
        colour:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        stadium:
          $ref: '#/components/schemas/Stadium'

    D11TeamName:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        photoFileName:
          type: string
    D11TeamBase:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
    D11Team:
      type: object
      required:
        - id
        - name
        - shortName
        - code
        - dummy
        - photoFileName
        - owner
        - coOwner
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        shortName:
          type: string
        code:
          type: string
        dummy:
          type: boolean
        photoFileName:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        coOwner:
          $ref: '#/components/schemas/User'

    SeasonBase:
      type: object
      required:
        - id
        - name
        - shortName
        - status
        - date
        - legacy
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
    Season:
      type: object
      required:
        - id
        - name
        - shortName
        - status
        - date
        - legacy
        - premierLeague
        - d11League
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          pattern: \d{4}-\d{4}
        shortName:
          type: string
          pattern: \d{2}-\d{2}
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
        legacy:
          type: boolean
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'

    PremierLeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    PremierLeague:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

    MatchWeekBase:
      type: object
      required:
        - id
        - matchWeekNumber
        - status
        - date
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        date:
          type: string
          format: date
    MatchWeek:
      type: object
      required:
        - id
        - matchWeekNumber
        - status
        - elapsed
        - date
        - premierLeague
        - season
        - d11MatchWeek
        - leader
        - matches
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        status:
          $ref: '#/components/schemas/Status'
        elapsed:
          type: integer
          format: int32
        date:
          type: string
          format: date
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        season:
          $ref: '#/components/schemas/SeasonBase'
        d11MatchWeek:
          $ref: '#/components/schemas/D11MatchWeekBase'
        leader:
          $ref: '#/components/schemas/TeamName'
        matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64

    MatchBase:
      type: object
      required:
        - id
        - whoscoredId
        - datetime
        - home_team_goals
        - away_team_goals
        - previous_home_team_goals
        - previous_away_team_goals
        - elapsed
        - status
        - homeTeam
        - awayTeam
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        # Matches are a special case where we want to include team name, code and id in the base DTO.
        homeTeam:
          $ref: '#/components/schemas/TeamName'
        awayTeam:
          $ref: '#/components/schemas/TeamName'

    Match:
      type: object
      required:
        - id
        - whoscoredId
        - datetime
        - home_team_goals
        - away_team_goals
        - previous_home_team_goals
        - previous_away_team_goals
        - elapsed
        - status
        - homeTeam
        - awayTeam
        - matchWeek
        - stadium
        - goals
      properties:
        id:
          type: integer
          format: int64
        whoscoredId:
          type: integer
          format: int64
        datetime:
          type: string
          format: date-time
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        homeTeam:
          $ref: '#/components/schemas/TeamBase'
        awayTeam:
          $ref: '#/components/schemas/TeamBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'
        stadium:
          $ref: '#/components/schemas/Stadium'
        goals:
          type: array
          items:
            $ref: "#/components/schemas/GoalBase"

    D11LeagueBase:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    D11League:
      type: object
      required:
        - id
        - name
        - season
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        season:
          $ref: '#/components/schemas/SeasonBase'

    D11MatchWeekBase:
      type: object
      required:
        - id
        - matchWeekNumber
        - date
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        date:
          type: string
          format: date
    D11MatchWeek:
      type: object
      required:
        - id
        - matchWeekNumber
        - elapsed
        - date
        - d11League
        - matchWeek
        - leader
        - d11Matches
      properties:
        id:
          type: integer
          format: int64
        matchWeekNumber:
          type: integer
          format: int32
        elapsed:
          type: integer
          format: int32
        date:
          type: string
          format: date
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'
        leader:
          $ref: '#/components/schemas/D11TeamName'
        d11Matches:
          type: object
          additionalProperties:
            type: array
            items:
              type: integer
              format: int64

    D11MatchBase:
      type: object
      required:
        - id
        - date
        - home_team_goals
        - away_team_goals
        - home_team_points
        - away_team_points
        - previous_home_team_goals
        - previous_away_team_goals
        - previous_home_team_points
        - previous_away_team_points
        - elapsed
        - status
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        homeTeamPoints:
          type: integer
          format: int32
        awayTeamPoints:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamPoints:
          type: integer
          format: int32
        previousAwayTeamPoints:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
    D11Match:
      type: object
      required:
        - id
        - date
        - home_team_goals
        - away_team_goals
        - home_team_points
        - away_team_points
        - previous_home_team_goals
        - previous_away_team_goals
        - previous_home_team_points
        - previous_away_team_points
        - elapsed
        - status
        - homeD11Team
        - awayD11Team
        - d11MatchWeek
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date
        homeTeamGoals:
          type: integer
          format: int32
        awayTeamGoals:
          type: integer
          format: int32
        homeTeamPoints:
          type: integer
          format: int32
        awayTeamPoints:
          type: integer
          format: int32
        previousHomeTeamGoals:
          type: integer
          format: int32
        previousAwayTeamGoals:
          type: integer
          format: int32
        previousHomeTeamPoints:
          type: integer
          format: int32
        previousAwayTeamPoints:
          type: integer
          format: int32
        elapsed:
          type: string
        status:
          $ref: '#/components/schemas/Status'
        homeD11Team:
          $ref: '#/components/schemas/D11TeamBase'
        awayD11Team:
          $ref: '#/components/schemas/D11TeamBase'
        d11matchWeek:
          $ref: '#/components/schemas/D11MatchWeekBase'

    GoalBase:
      type: object
      required:
        - id
        - time
        - addedTime
        - penalty
        - ownGoal
        - player
        - team
      properties:
        id:
          type: integer
          format: int64
        time:
          type: integer
          format: int32
        addedTime:
          type: integer
          format: int32
        penalty:
          type: boolean
        ownGoal:
          type: boolean
        # Match events are a special case where we want to include player and team info in the base DTO.
        player:
          $ref: '#/components/schemas/PlayerName'
        team:
          $ref: '#/components/schemas/TeamName'
    Goal:
      type: object
      required:
        - id
        - time
        - addedTime
        - penalty
        - ownGoal
        - match
        - team
        - player
      properties:
        id:
          type: integer
          format: int64
        time:
          type: integer
          format: int32
        addedTime:
          type: integer
          format: int32
        penalty:
          type: boolean
        ownGoal:
          type: boolean
        match:
          $ref: '#/components/schemas/MatchBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        player:
          $ref: '#/components/schemas/PlayerBase'

    PlayerMatchStatBase:
      type: object
      required:
        - id
        - playedPosition
        - lineup
        - substitutionOnTime
        - substitutionOffTime
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - yellowCardTime
        - redCardTime
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - points
      properties:
        id:
          type: integer
          format: int64
        playedPosition:
          type: string
        lineup:
          type: integer
          format: int32
        substitutionOnTime:
          type: integer
          format: int32
        substitutionOffTime:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        yellowCardTime:
          type: integer
          format: int32
        redCardTime:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
    PlayerMatchStat:
      type: object
      required:
        - id
        - playedPosition
        - lineup
        - substitutionOnTime
        - substitutionOffTime
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - yellowCardTime
        - redCardTime
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - points
        - player
        - match
        - team
        - d11Team
        - position
      properties:
        id:
          type: integer
          format: int64
        playedPosition:
          type: string
        lineup:
          type: integer
          format: int32
        substitutionOnTime:
          type: integer
          format: int32
        substitutionOffTime:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        yellowCardTime:
          type: integer
          format: int32
        redCardTime:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerBase'
        match:
          $ref: '#/components/schemas/MatchBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        position:
          $ref: '#/components/schemas/Position'

    PlayerSeasonStatBase:
      type: object
      required:
        - id
        - value
        - ranking
        - points
        - formPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
      properties:
        id:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
    PlayerSeasonStat:
      type: object
      required:
        - id
        - value
        - ranking
        - points
        - formPoints
        - pointsPerAppearance
        - goals
        - goalAssists
        - ownGoals
        - goalsConceded
        - cleanSheets
        - yellowCards
        - redCards
        - substitutionsOn
        - substitutionsOff
        - manOfTheMatch
        - sharedManOfTheMatch
        - rating
        - gamesStarted
        - gamesSubstitute
        - gamesDidNotParticipate
        - minutesPlayed
        - playerId
        - seasonId
        - teamId
        - d11TeamId
        - positionId
      properties:
        id:
          type: integer
          format: int64
        value:
          type: integer
          format: int32
        ranking:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        pointsPerAppearance:
          type: integer
          format: int32
        goals:
          type: integer
          format: int32
        goalAssists:
          type: integer
          format: int32
        ownGoals:
          type: integer
          format: int32
        goalsConceded:
          type: integer
          format: int32
        cleanSheets:
          type: integer
          format: int32
        yellowCards:
          type: integer
          format: int32
        redCards:
          type: integer
          format: int32
        substitutionsOn:
          type: integer
          format: int32
        substitutionsOff:
          type: integer
          format: int32
        manOfTheMatch:
          type: integer
          format: int32
        sharedManOfTheMatch:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
        gamesStarted:
          type: integer
          format: int32
        gamesSubstitute:
          type: integer
          format: int32
        gamesDidNotParticipate:
          type: integer
          format: int32
        minutesPlayed:
          type: integer
          format: int32
        player:
          $ref: '#/components/schemas/PlayerBase'
        season:
          $ref: '#/components/schemas/SeasonBase'
        team:
          $ref: '#/components/schemas/TeamBase'
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        position:
          $ref: '#/components/schemas/Position'

    TeamTableStatBase:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    TeamTableStat:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - team
        - premierLeague
        - matchWeek
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        team:
          $ref: '#/components/schemas/TeamBase'
        premierLeague:
          $ref: '#/components/schemas/PremierLeagueBase'
        matchWeek:
          $ref: '#/components/schemas/MatchWeekBase'

    D11TeamTableStatBase:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
    D11TeamTableStat:
      type: object
      required:
        - id
        - matchesPlayed
        - matchesWon
        - matchesDrawn
        - matchesLost
        - goalsFor
        - goalsAgainst
        - goalDifference
        - points
        - formPoints
        - formMatchPoints
        - ranking
        - previousRanking
        - homeMatchesPlayed
        - homeMatchesWon
        - homeMatchesDrawn
        - homeMatchesLost
        - homeGoalsFor
        - homeGoalsAgainst
        - homeGoalDifference
        - homePoints
        - homeRanking
        - awayMatchesPlayed
        - awayMatchesWon
        - awayMatchesDrawn
        - awayMatchesLost
        - awayGoalsFor
        - awayGoalsAgainst
        - awayGoalDifference
        - awayPoints
        - awayRanking
        - d11Team
        - d11League
        - d11MatchWeek
      properties:
        id:
          type: integer
          format: int64
        matchesPlayed:
          type: integer
          format: int32
        matchesWon:
          type: integer
          format: int32
        matchesDrawn:
          type: integer
          format: int32
        matchesLost:
          type: integer
          format: int32
        goalsFor:
          type: integer
          format: int32
        goalsAgainst:
          type: integer
          format: int32
        goalDifference:
          type: integer
          format: int32
        points:
          type: integer
          format: int32
        formPoints:
          type: integer
          format: int32
        formMatchPoints:
          type: array
          items:
            type: integer
            format: int32
        ranking:
          type: integer
          format: int32
        previousRanking:
          type: integer
          format: int32
        homeMatchesPlayed:
          type: integer
          format: int32
        homeMatchesWon:
          type: integer
          format: int32
        homeMatchesDrawn:
          type: integer
          format: int32
        homeMatchesLost:
          type: integer
          format: int32
        homeGoalsFor:
          type: integer
          format: int32
        homeGoalsAgainst:
          type: integer
          format: int32
        homeGoalDifference:
          type: integer
          format: int32
        homePoints:
          type: integer
          format: int32
        homeRanking:
          type: integer
          format: int32
        awayMatchesPlayed:
          type: integer
          format: int32
        awayMatchesWon:
          type: integer
          format: int32
        awayMatchesDrawn:
          type: integer
          format: int32
        awayMatchesLost:
          type: integer
          format: int32
        awayGoalsFor:
          type: integer
          format: int32
        awayGoalsAgainst:
          type: integer
          format: int32
        awayGoalDifference:
          type: integer
          format: int32
        awayPoints:
          type: integer
          format: int32
        awayRanking:
          type: integer
          format: int32
        d11Team:
          $ref: '#/components/schemas/D11TeamBase'
        d11League:
          $ref: '#/components/schemas/D11LeagueBase'
        d11MatchWeek:
          $ref: '#/components/schemas/D11MatchWeekBase'

    PlayerSearchResult:
      type: object
      required:
        - id
        - name
        - photoFileName
        - teamId
        - teamName
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        photoFileName:
          type: string
        teamId:
          type: integer
          format: int64
        teamName:
          type: string
    SearchResult:
      type: object
      required:
        - players
      properties:
        players:
          type: array
          items:
            $ref: "#/components/schemas/PlayerSearchResult"
