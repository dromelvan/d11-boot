/**
 * D11 Boot API.
 */

plugins {
    id 'java-library'
    id "org.openapi.generator" version "4.3.1"
}

sourceCompatibility = JavaVersion.VERSION_1_10
targetCompatibility = JavaVersion.VERSION_1_10

dependencies {
    // Needed to compile classes generated by openApiGenerate.
    implementation 'io.swagger:swagger-annotations:1.6.2'
    implementation 'org.springframework.boot:spring-boot-starter-web:2.3.3.RELEASE'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    // The spring generator adds a lot of unused imports.
    // This one being one of them. https://github.com/OpenAPITools/openapi-generator/issues/2901
    implementation 'org.openapitools:jackson-databind-nullable:0.2.1'
}

sourceSets {
    main {
    	java {
    		srcDir "${buildDir.absolutePath}/generated/src/main/java"
        }
   }
}

ext.inputSpecFile = "$projectDir/src/main/resources/openapi/d11-boot-openapi-v1.0.yaml"

openApiValidate {
    inputSpec = inputSpecFile.toString()
}

openApiGenerate {
    // The extra AllOf files are generated due to a bug in the plugin.
    // See: https://github.com/OpenAPITools/openapi-generator/issues/3100
    generatorName = "spring"
    inputSpec = inputSpecFile.toString()
    outputDir = "$buildDir/generated"
    apiPackage = group + ".api"
    modelPackage = group + ".api.model"
    modelNameSuffix = "DTO"
    configOptions = [
        dateLibrary: "java8",
        serializableModel: "true",
        skipDefaultInterface: "true",
        interfaceOnly: "true",
        booleanGetterPrefix: "is"
    ]
}

task openApiClean(type: Delete) {
    dependsOn tasks.openApiGenerate
    // We don't need the automagically generated ApiUtil
    delete fileTree('build\\generated\\') {
        include '**/ApiUtil.java'
    }
}

compileJava {
    dependsOn openApiClean
}
