plugins {
    id 'java-library'
    id 'org.springframework.boot' version "${springBootVersion}"
    id 'io.spring.dependency-management' version "${springDependencyManagementVersion}"
    id 'checkstyle'
    id 'pmd'
    id "com.github.spotbugs" version "${spotBugsPluginVersion}"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapStructVersion}"
    // Build complains about missing enum constants without this.
    compileOnly "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"

    implementation project(':d11-boot-api')
    implementation project(':d11-boot-spring')
    implementation project(':d11-boot-util')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation "org.modelmapper:modelmapper:${modelMapperVersion}"
    implementation "org.mapstruct:mapstruct:${mapStructVersion}"
    implementation 'org.apache.commons:commons-lang3'
    implementation "com.github.spotbugs:spotbugs-annotations:${spotBugsVersion}"

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.springframework.boot:spring-boot-starter-data-jpa'
    // See above
    testCompileOnly "io.swagger.core.v3:swagger-annotations:${swaggerAnnotationsVersion}"

    testImplementation project(':d11-boot-api-client:d11-boot-api-client-feign')
    testImplementation project(path: ':d11-boot-spring', configuration: 'testArtifacts')
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation "com.auth0:java-jwt:${javaJwtVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-mail'

    testRuntimeOnly 'com.h2database:h2'

}

test {
    useJUnitPlatform()
}

checkstyle {
    toolVersion "${checkstyleVersion}"
}

pmd {
    ruleSets = []
    ruleSetFiles = rootProject.files("config/pmd/pmd.xml")
}

bootJar {
    enabled = false
}

jar {
    enabled = true
}
